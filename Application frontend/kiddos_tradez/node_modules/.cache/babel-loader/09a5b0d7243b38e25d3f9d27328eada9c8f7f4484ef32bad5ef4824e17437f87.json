{"ast":null,"code":"var _jsxFileName = \"C:\\\\PFE\\\\kiddos_tradez\\\\src\\\\Components\\\\Crousell\\\\Crousell.js\";\nimport React from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { Paper, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Item(props) {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"CheckButton\",\n      children: \"Check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Item;\nconst Crousell = () => {\n  var items = [{\n    name: \"Random Name #1\",\n    description: \"Probably the most random thing you have ever seen!\"\n  }, {\n    name: \"Random Name #2\",\n    description: \"Hello World!\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    fullHeightHover: false // We want the nav buttons wrapper to only be as big as the button element is\n    ,\n    navButtonsProps: {\n      // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\n      style: {\n        backgroundColor: \"cornflowerblue\",\n        borderRadius: 0\n      }\n    },\n    navButtonsWrapperProps: {\n      // Move the buttons to the bottom. Unsetting top here to override default style.\n      style: {\n        bottom: \"0\",\n        top: \"unset\"\n      }\n    },\n    NextIcon: \"next\" // Change the \"inside\" of the next button to \"next\"\n    ,\n    PrevIcon: \"prev\" // Change the \"inside of the prev button to \"prev\"\n    ,\n    children: items.map((item, i) => /*#__PURE__*/_jsxDEV(Item, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Crousell;\nexport default Crousell;\nvar _c, _c2;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Crousell\");","map":{"version":3,"names":["React","Carousel","Paper","Button","jsxDEV","_jsxDEV","Item","props","children","item","name","fileName","_jsxFileName","lineNumber","columnNumber","description","className","_c","Crousell","items","fullHeightHover","navButtonsProps","style","backgroundColor","borderRadius","navButtonsWrapperProps","bottom","top","NextIcon","PrevIcon","map","i","_c2","$RefreshReg$"],"sources":["C:/PFE/kiddos_tradez/src/Components/Crousell/Crousell.js"],"sourcesContent":["import React from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Paper, Button } from \"@mui/material\";\r\nfunction Item(props) {\r\n  return (\r\n    <Paper>\r\n      <h2>{props.item.name}</h2>\r\n      <p>{props.item.description}</p>\r\n\r\n      <Button className=\"CheckButton\">Check it out!</Button>\r\n    </Paper>\r\n  );\r\n}\r\nconst Crousell = () => {\r\n  var items = [\r\n    {\r\n      name: \"Random Name #1\",\r\n      description: \"Probably the most random thing you have ever seen!\",\r\n    },\r\n    {\r\n      name: \"Random Name #2\",\r\n      description: \"Hello World!\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Carousel\r\n      fullHeightHover={false} // We want the nav buttons wrapper to only be as big as the button element is\r\n      navButtonsProps={{\r\n        // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\r\n        style: {\r\n          backgroundColor: \"cornflowerblue\",\r\n          borderRadius: 0,\r\n        },\r\n      }}\r\n      navButtonsWrapperProps={{\r\n        // Move the buttons to the bottom. Unsetting top here to override default style.\r\n        style: {\r\n          bottom: \"0\",\r\n          top: \"unset\",\r\n        },\r\n      }}\r\n      NextIcon=\"next\" // Change the \"inside\" of the next button to \"next\"\r\n      PrevIcon=\"prev\" // Change the \"inside of the prev button to \"prev\"\r\n    >\r\n      {items.map((item, i) => (\r\n        <Item key={i} item={item} />\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Crousell;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9C,SAASC,IAAIA,CAACC,KAAK,EAAE;EACnB,oBACEF,OAAA,CAACH,KAAK;IAAAM,QAAA,gBACJH,OAAA;MAAAG,QAAA,EAAKD,KAAK,CAACE,IAAI,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC1BT,OAAA;MAAAG,QAAA,EAAID,KAAK,CAACE,IAAI,CAACM;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAE/BT,OAAA,CAACF,MAAM;MAACa,SAAS,EAAC,aAAa;MAAAR,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChD;AAEZ;AAACG,EAAA,GATQX,IAAI;AAUb,MAAMY,QAAQ,GAAGA,CAAA,KAAM;EACrB,IAAIC,KAAK,GAAG,CACV;IACET,IAAI,EAAE,gBAAgB;IACtBK,WAAW,EAAE;EACf,CAAC,EACD;IACEL,IAAI,EAAE,gBAAgB;IACtBK,WAAW,EAAE;EACf,CAAC,CACF;EAED,oBACEV,OAAA,CAACJ,QAAQ;IACPmB,eAAe,EAAE,KAAM,CAAC;IAAA;IACxBC,eAAe,EAAE;MACf;MACAC,KAAK,EAAE;QACLC,eAAe,EAAE,gBAAgB;QACjCC,YAAY,EAAE;MAChB;IACF,CAAE;IACFC,sBAAsB,EAAE;MACtB;MACAH,KAAK,EAAE;QACLI,MAAM,EAAE,GAAG;QACXC,GAAG,EAAE;MACP;IACF,CAAE;IACFC,QAAQ,EAAC,MAAM,CAAC;IAAA;IAChBC,QAAQ,EAAC,MAAM,CAAC;IAAA;IAAArB,QAAA,EAEfW,KAAK,CAACW,GAAG,CAAC,CAACrB,IAAI,EAAEsB,CAAC,kBACjB1B,OAAA,CAACC,IAAI;MAASG,IAAI,EAAEA;IAAK,GAAdsB,CAAC;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEf,CAAC;AAACkB,GAAA,GArCId,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}